package authorization;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jws;
import io.jsonwebtoken.Jwts;

import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Date;

public class JWTTokenGenerator {

    public static JWTToken generateJWTToken(String jwt, String clientKey, String clientSecret) {
        SecretKey key = new SecretKeySpec(clientSecret.getBytes(), "HmacSHA256");

        try {
            Jws<Claims> jws = Jwts.parserBuilder()
                    .setSigningKey(key)
                    .build()
                    .parseClaimsJws(jwt);

            Claims claims = jws.getBody();

            String issuer = claims.getIssuer();
            String subject = claims.getSubject();
            Date expiration = claims.getExpiration();

            return new JWTToken(issuer, subject, expiration.getTime());
        } catch (Exception e) {
            e.printStackTrace();
            return null; // Return null or handle the error case as needed
        }
    }

    public static void main(String[] args) {
        String jwtString = "your_jwt_string_here";
        String clientKey = "your_client_key_here";
        String clientSecret = "your_client_secret_here";

        JWTToken jwtToken = generateJWTToken(jwtString, clientKey, clientSecret);

        if (jwtToken != null) {
            System.out.println("Issuer: " + jwtToken.getIssuer());
            System.out.println("Subject: " + jwtToken.getSubject());
            System.out.println("Expiration: " + jwtToken.getExpiration());
        } else {
            System.out.println("Failed to generate JWTToken");
        }
    }
}

class JWTToken {
    private String issuer;
    private String subject;
    private long expiration;

    public JWTToken(String issuer, String subject, long expiration) {
        this.issuer = issuer;
        this.subject = subject;
        this.expiration = expiration;
    }

    public String getIssuer() {
        return issuer;
    }

    public String getSubject() {
        return subject;
    }

    public long getExpiration() {
        return expiration;
    }
}
